A latexmkrc file is a project-local configuration for Latexmk that automates and customizes the LaTeX build process, so repeated runs, bibliography/glossary generation, and auxiliary tools happen correctly without manual commands.

​
What it controls

    Build targets and engines: choose PDF output and engines (e.g., pdflatex, lualatex, xelatex), and set default main file(s).

​

Automatic reruns: ensure LaTeX, bibliography tools, and indexers run as many times as needed to resolve references, citations, and TOC lists.

​

Custom rules: define steps for glossaries, nomenclature, epstopdf, or any shell pipeline needed during the build.

    ​

Common settings

    Output mode and main file: set $pdf_mode, and @default_files = ('main.tex') to control the target and the root document.

​

Engines and options: set $pdflatex or $lualatex with flags like -interaction=nonstopmode or -shell-escape when needed.

​

Cleaning: add extensions to $clean_ext so latexmk -c removes extra generated files beyond the defaults.

    ​

Environment and paths

    Environment variables: set items like $ENV{'TZ'} for time zone–dependent timestamps in the PDF.

​

TEXINPUTS and search paths: extend input paths so shared styles, images, or class files in nonstandard folders are found seamlessly.

    ​

Why use it

    Reliability and speed: avoids manual guesswork about how many runs are needed and which auxiliary tools to call, making builds reproducible across machines and CI.

​

Project portability: keeps build logic versioned with the project, so collaborators compile the same way without custom scripts.

    ​

Minimal example

    Set PDF build and main file:

        $pdf_mode = 1; # direct PDF

        @default_files = ('main.tex');

    ​

Enable shell escape if required by graphics/code:

    $pdflatex = 'pdflatex -interaction=nonstopmode -shell-escape';

    ​

Clean extra artifacts on latexmk -c:

    $clean_ext = 'bbl nav snm out gls glo';